name: cicd pipeline

on:
  push:
    branches: ['dev', 'main', 'test', 'qa']
  pull_request:
    branches: ['main', 'dev', 'test', 'qa']

jobs:
  upgrade:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies and build Next.js app
        run: |
          npm install
          npm run build
        working-directory: ./terraform-assignment-cicd

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Format
        run: terraform fmt -recursive
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform


# name: Deploy Static Website with Terraform CI/CD

# on:
#   push:
#     branches: ["main"]
#   # pull_request:
#   #   branches: ["main"]

# jobs:
#   deploy:
#     name: Terraform + Website Upload
#     runs-on: ubuntu-latest

#     steps:
#       - name: 📥 Checkout repository
#         uses: actions/checkout@v4

#       - name: 🛠 Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.5.7

#       - name: 🔐 Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: 📁 Terraform Init
#         run: terraform init

#       - name: ✅ Terraform Validate
#         run: terraform validate

#       - name: 🔍 Terraform Plan
#         run: terraform plan -out=tfplan

#       - name: 🚀 Terraform Apply (auto-approve)
#         run: terraform apply -auto-approve tfplan

#       - name: 📤 Upload website files to S3
#         run: |
#           bucket_name=$(terraform output -raw website_url | cut -d'.' -f1)
#           aws s3 sync ./website s3://$bucket_name --delete
